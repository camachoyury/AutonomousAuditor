name: Docker Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [audit_request]
  webhook:
    types: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TARGET_REPO: camachoyury/financial-reports

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short

      - name: Build and test Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run container tests
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-$(git rev-parse --short HEAD) \
            pytest tests/

      - name: Push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Financial Audit
        if: github.event_name == 'repository_dispatch' || github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
        run: |
          docker run --rm \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            -e TARGET_REPO_TOKEN=${{ secrets.TARGET_REPO_TOKEN }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-$(git rev-parse --short HEAD) \
            python -c "from auditor.agent import audit_financial_documents; audit_financial_documents('https://github.com/${{ env.TARGET_REPO }}')"

      - name: Create Audit Summary Issue
        if: github.event_name == 'repository_dispatch' || github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const auditResults = JSON.parse(fs.readFileSync('audit_results.json', 'utf8'));
            
            await github.rest.issues.create({
              owner: '${{ env.TARGET_REPO.split("/")[0] }}',
              repo: '${{ env.TARGET_REPO.split("/")[1] }}',
              title: `Audit Report - ${new Date().toISOString()}`,
              body: `## Audit Results\n\n${JSON.stringify(auditResults, null, 2)}`,
              labels: ['audit', 'automated']
            }); 